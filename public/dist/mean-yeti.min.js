function ApiService(a){function b(b){return a({method:"GET",url:g+b,cache:!1})}function c(b,c){return a({method:"GET",url:g+b+"/"+c,cache:!1})}function d(b,c){return console.log("CREATING "+b),console.log(c),a({method:"POST",url:g+b,data:c})}function e(b,c){return a({method:"DELETE",url:g+b+"/"+c})}function f(b,c,d){return a({method:"PUT",url:g+b+"/"+c,data:d})}var g="/api/",h={project:"projects",resource:"resources",task:"tasks",team:"teams",user:"users"},i={getAll:b,getOne:c,create:d,remove:e,update:f,endpoint:h};return i}angular.module("mean-yeti",["ngSanitize"]).config(["$compileProvider",function(a){a.debugInfoEnabled(!1)}]),function(a){"use strict";function b(b,c){function d(){F.refreshData()}function e(){E.editingProject=!1,E.editingProjectInfo=void 0,E.editingTask=!1,E.editingTaskInfo=void 0,E.editingTeam=!1,E.editingTeamInfo=void 0,E.editingResource=!1,E.editingResourceInfo=void 0,E.editingUser=!1,E.editingUserInfo=void 0}function f(){e(),c.getAll("projects").then(function(a){E.projects=a.data,c.getAll("tasks").then(function(a){E.tasks=a.data,c.getAll("teams").then(function(a){E.teams=a.data,c.getAll("resources").then(function(a){E.resources=a.data,c.getAll("users").then(function(a){E.users=a.data})})})})})}function g(a){F.refreshData(),E.showing=a}function h(){c.create(c.endpoint.project,E.editingProjectInfo).then(function(){E.editingProject=!1,F.selectDataType("projects")})}function i(){c.update(c.endpoint.project,E.editingProjectInfo._id,E.editingProjectInfo).then(function(){E.editingProject=!1,F.selectDataType("projects")})}function j(b){E.editingProject=!0,E.editingProjectInfo=a.copy(b),void 0===E.editingProjectInfo?(E.isNewItem=!0,E.editingProjectInfo={name:"",startDate:new Date,endDate:new Date,tasks:[],tags:[],team:"",deliverables:[],systems:[]}):(E.editingProjectInfo.startDate=new Date(b.startDate),E.editingProjectInfo.endDate=new Date(b.endDate),E.isNewItem=!1)}function k(a){c.remove("projects",a).then(function(){F.selectDataType("projects")})}function l(){c.create(c.endpoint.task,E.editingTaskInfo).then(function(){E.editingTask=!1,F.selectDataType("tasks")})}function m(){c.update(c.endpoint.task,E.editingTaskInfo._id,E.editingTaskInfo).then(function(){E.editingTask=!1,F.selectDataType("tasks")})}function n(b){E.editingTask=!0,E.editingTaskInfo=a.copy(b),void 0===E.editingTaskInfo?(E.isNewItem=!0,E.editingTaskInfo={name:"",isComplete:!1,project:"",hourEstimate:0,hoursBurned:0,startDate:new Date,endDate:new Date}):(E.editingTaskInfo.startDate=new Date(b.startDate),E.editingTaskInfo.endDate=new Date(b.endDate),E.isNewItem=!1)}function o(a){c.remove("tasks",a).then(function(){F.selectDataType("tasks")})}function p(){c.create(c.endpoint.team,E.editingTeamInfo).then(function(){E.editingTeam=!1,F.selectDataType("teams")})}function q(){c.update(c.endpoint.team,E.editingTeamInfo._id,E.editingTeamInfo).then(function(){E.editingTeam=!1,F.selectDataType("teams")})}function r(b){E.editingTeam=!0,E.editingTeamInfo=a.copy(b),void 0===E.editingTeamInfo?(E.isNewItem=!0,E.editingTeamInfo={name:"",resources:[]}):E.isNewItem=!1}function s(a){c.remove("teams",a).then(function(){F.selectDataType("teams")})}function t(){E.editingResourceInfo.skills=E.editingResourceInfo.skills.split(","),c.create(c.endpoint.resource,E.editingResourceInfo).then(function(a){console.log(a.data),x(a.data),E.editingResource=!1,F.selectDataType("resources")})}function u(){E.editingResourceInfo.skills=E.editingResourceInfo.skills.split(","),x(E.editingResourceInfo),c.update(c.endpoint.resource,E.editingResourceInfo._id,E.editingResourceInfo).then(function(){E.editingResource=!1,F.selectDataType("resources")})}function v(b){E.editingResource=!0,E.editingResourceInfo=a.copy(b),E.selectedTeamsForResource=[],void 0===E.editingResourceInfo?(E.isNewItem=!0,E.editingResourceInfo={name:"",role:"",tasks:[],skills:""}):(E.editingResourceInfo.skills=E.editingResourceInfo.skills.join(", "),E.teams.forEach(function(a){a.resources.includes(b._id)&&E.selectedTeamsForResource.push(a._id)}),E.isNewItem=!1)}function w(a){c.remove("resources",a).then(function(){F.selectDataType("resources")})}function x(a){E.teams.forEach(function(b){var d=b.resources.indexOf(a._id);E.selectedTeamsForResource.includes(b._id)?d!==-1||(b.resources.push(a._id),c.update(c.endpoint.team,b._id,b)):d!==-1&&(b.resources.splice(d,1),c.update(c.endpoint.team,b._id,b))})}function y(a){var b=E.selectedTeamsForResource.indexOf(a);b>-1?E.selectedTeamsForResource.splice(b,1):E.selectedTeamsForResource.push(a)}function z(){c.create(c.endpoint.user,E.editingUserInfo).then(function(){E.editingUser=!1,F.selectDataType("users")})}function A(){c.update(c.endpoint.user,E.editingUserInfo._id,E.editingUserInfo).then(function(){E.editingUser=!1,F.selectDataType("users")})}function B(b){E.editingUser=!0,E.editingUserInfo=a.copy(b),void 0===E.editingUserInfo?(E.isNewItem=!0,E.editingUserInfo={name:"",pictureUrl:"",projects:[]}):E.isNewItem=!1}function C(a){c.remove("users",a).then(function(){F.selectDataType("users")})}function D(a){var b=E.editingUserInfo.projects.indexOf(a);b>-1?E.editingUserInfo.projects.splice(b,1):E.editingUserInfo.projects.push(a)}b.vm={};var E=b.vm;E.showing="",E.isNewItem=!1,E.editingProject=!1,E.editingProjectInfo=void 0,E.editingTask=!1,E.editingTaskInfo=void 0,E.editingTeam=!1,E.editingTeamInfo=void 0,E.editingResource=!1,E.editingResourceInfo=void 0,E.editingUser=!1,E.editingUserInfo=void 0,E.projects=[],E.tasks=[],E.teams=[],E.resources=[],E.users=[],b.func={selectDataType:g,refreshData:f,clearEditing:e,editProject:j,deleteProject:k,createProject:h,updateProject:i,editTask:n,deleteTask:o,createTask:l,updateTask:m,editTeam:r,deleteTeam:s,createTeam:p,updateTeam:q,editResource:v,deleteResource:w,createResource:t,updateResource:u,updateTeamAfterModifyingResource:x,toggleSelectionOfTeamForResource:y,editUser:B,deleteUser:C,createUser:z,updateUser:A,toggleSelectionOfProjectForUser:D};var F=b.func;d()}a.module("mean-yeti").controller("admin.controller",["$scope","Api",b])}(angular),angular.module("todoController",[]).controller("mainController",function(a,b,c){a.formData={},c.get().success(function(b){a.todos=b}),a.createTodo=function(){void 0!=a.formData.text&&c.create(a.formData).success(function(b){a.formData={},a.todos=b})},a.deleteTodo=function(b){c.delete(b).success(function(b){a.todos=b})}}),angular.module("mean-yeti").factory("Api",["$http",ApiService]),angular.module("todoService",[]).factory("Todos",function(a){return{get:function(){return a.get("/api/todos")},create:function(b){return a.post("/api/todos",b)},delete:function(b){return a.delete("/api/todos/"+b)}}});
//# sourceMappingURL=mean-yeti.js.map
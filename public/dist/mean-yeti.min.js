function ApiService(a){function b(b){return a({method:"GET",url:h+b,cache:!1})}function c(b){return a({method:"GET",url:h+"projects/"+b+"/details",cache:!1})}function d(b,c){return a({method:"GET",url:h+b+"/"+c,cache:!1})}function e(b,c){return console.log("CREATING "+b),console.log(c),a({method:"POST",url:h+b,data:c})}function f(b,c){return a({method:"DELETE",url:h+b+"/"+c})}function g(b,c,d){return a({method:"PUT",url:h+b+"/"+c,data:d})}var h="/api/",i={project:"projects",resource:"resources",task:"tasks",team:"teams",user:"users"},j={getAll:b,getOne:d,create:e,remove:f,update:g,getProjectDetails:c,endpoint:i};return j}angular.module("mean-yeti",["ngSanitize"]).config(["$compileProvider",function(a){a.debugInfoEnabled(!1)}]),function(a){"use strict";function b(b,c){function d(){I.refreshData()}function e(){H.editingProject=!1,H.editingProjectInfo=void 0,H.editingTask=!1,H.editingTaskInfo=void 0,H.editingTeam=!1,H.editingTeamInfo=void 0,H.editingResource=!1,H.editingResourceInfo=void 0,H.editingUser=!1,H.editingUserInfo=void 0}function f(){e(),c.getAll("projects").then(function(a){H.projects=a.data,c.getAll("tasks").then(function(a){H.tasks=a.data,c.getAll("teams").then(function(a){H.teams=a.data,c.getAll("resources").then(function(a){H.resources=a.data,c.getAll("users").then(function(a){H.users=a.data})})})})})}function g(a){I.refreshData(),H.showing=a}function h(){H.editingProjectInfo.deliverables=H.editingProjectInfo.deliverables.split(","),H.editingProjectInfo.tags=H.editingProjectInfo.tags.split(","),c.create(c.endpoint.project,H.editingProjectInfo).then(function(){H.editingProject=!1,I.selectDataType("projects")})}function i(){console.log(H.editingProjectInfo),H.editingProjectInfo.deliverables=H.editingProjectInfo.deliverables.split(","),H.editingProjectInfo.tags=H.editingProjectInfo.tags.split(","),c.update(c.endpoint.project,H.editingProjectInfo._id,H.editingProjectInfo).then(function(){H.editingProject=!1,I.selectDataType("projects")})}function j(b){H.editingProject=!0,H.editingProjectInfo=a.copy(b),console.log(H.editingProjectInfo),void 0===H.editingProjectInfo?(H.isNewItem=!0,H.editingProjectInfo={name:"",description:"",startDate:new Date,endDate:new Date,externalTasks:[],tags:[],team:"",deliverables:"",systems:[],priority:"Medium",deliveryLoad:""}):(void 0===H.editingProjectInfo.externalTasks&&(H.editingProjectInfo.externalTasks=[]),H.editingProjectInfo.deliverables=H.editingProjectInfo.deliverables.join(", "),H.editingProjectInfo.tags=H.editingProjectInfo.tags.join(", "),H.editingProjectInfo.startDate=new Date(b.startDate),H.editingProjectInfo.endDate=new Date(b.endDate),H.isNewItem=!1)}function k(a){c.remove("projects",a).then(function(){I.selectDataType("projects")})}function l(a){var b=H.editingProjectInfo.systems.indexOf(a);b>-1?H.editingProjectInfo.systems.splice(b,1):H.editingProjectInfo.systems.push(a)}function m(a){var b=H.editingProjectInfo.externalTasks.indexOf(a);b>-1?H.editingProjectInfo.externalTasks.splice(b,1):H.editingProjectInfo.externalTasks.push(a)}function n(){c.create(c.endpoint.task,H.editingTaskInfo).then(function(){H.editingTask=!1,I.selectDataType("tasks")})}function o(){c.update(c.endpoint.task,H.editingTaskInfo._id,H.editingTaskInfo).then(function(){H.editingTask=!1,I.selectDataType("tasks")})}function p(b){H.editingTask=!0,H.editingTaskInfo=a.copy(b),void 0===H.editingTaskInfo?(H.isNewItem=!0,H.editingTaskInfo={name:"",note:"",isComplete:!1,project:"",hourEstimate:0,hoursBurned:0,startDate:new Date,endDate:new Date}):(H.editingTaskInfo.startDate=new Date(b.startDate),H.editingTaskInfo.endDate=new Date(b.endDate),H.isNewItem=!1)}function q(a){c.remove("tasks",a).then(function(){I.selectDataType("tasks")})}function r(){c.create(c.endpoint.team,H.editingTeamInfo).then(function(){H.editingTeam=!1,I.selectDataType("teams")})}function s(){c.update(c.endpoint.team,H.editingTeamInfo._id,H.editingTeamInfo).then(function(){H.editingTeam=!1,I.selectDataType("teams")})}function t(b){H.editingTeam=!0,H.editingTeamInfo=a.copy(b),void 0===H.editingTeamInfo?(H.isNewItem=!0,H.editingTeamInfo={name:"",resources:[]}):H.isNewItem=!1}function u(a){c.remove("teams",a).then(function(){I.selectDataType("teams")})}function v(){H.editingResourceInfo.skills=H.editingResourceInfo.skills.split(","),c.create(c.endpoint.resource,H.editingResourceInfo).then(function(a){console.log(a.data),z(a.data),H.editingResource=!1,I.selectDataType("resources")})}function w(){H.editingResourceInfo.skills=H.editingResourceInfo.skills.split(","),z(H.editingResourceInfo),c.update(c.endpoint.resource,H.editingResourceInfo._id,H.editingResourceInfo).then(function(){H.editingResource=!1,I.selectDataType("resources")})}function x(b){H.editingResource=!0,H.editingResourceInfo=a.copy(b),H.selectedTeamsForResource=[],void 0===H.editingResourceInfo?(H.isNewItem=!0,H.editingResourceInfo={name:"",role:"",tasks:[],skills:""}):(H.editingResourceInfo.skills=H.editingResourceInfo.skills.join(", "),H.teams.forEach(function(a){a.resources.includes(b._id)&&H.selectedTeamsForResource.push(a._id)}),H.isNewItem=!1)}function y(a){c.remove("resources",a).then(function(){I.selectDataType("resources")})}function z(a){H.teams.forEach(function(b){var d=b.resources.indexOf(a._id);H.selectedTeamsForResource.includes(b._id)?d!==-1||(b.resources.push(a._id),c.update(c.endpoint.team,b._id,b)):d!==-1&&(b.resources.splice(d,1),c.update(c.endpoint.team,b._id,b))})}function A(a){var b=H.selectedTeamsForResource.indexOf(a);b>-1?H.selectedTeamsForResource.splice(b,1):H.selectedTeamsForResource.push(a)}function B(a){var b=H.editingResourceInfo.tasks.indexOf(a);b>-1?H.editingResourceInfo.tasks.splice(b,1):H.editingResourceInfo.tasks.push(a)}function C(){c.create(c.endpoint.user,H.editingUserInfo).then(function(){H.editingUser=!1,I.selectDataType("users")})}function D(){c.update(c.endpoint.user,H.editingUserInfo._id,H.editingUserInfo).then(function(){H.editingUser=!1,I.selectDataType("users")})}function E(b){H.editingUser=!0,H.editingUserInfo=a.copy(b),void 0===H.editingUserInfo?(H.isNewItem=!0,H.editingUserInfo={name:"",pictureUrl:"",projects:[]}):H.isNewItem=!1}function F(a){c.remove("users",a).then(function(){I.selectDataType("users")})}function G(a){var b=H.editingUserInfo.projects.indexOf(a);b>-1?H.editingUserInfo.projects.splice(b,1):H.editingUserInfo.projects.push(a)}b.vm={};var H=b.vm;H.showing="",H.isNewItem=!1,H.editingProject=!1,H.editingProjectInfo=void 0,H.editingTask=!1,H.editingTaskInfo=void 0,H.editingTeam=!1,H.editingTeamInfo=void 0,H.editingResource=!1,H.editingResourceInfo=void 0,H.editingUser=!1,H.editingUserInfo=void 0,H.projects=[],H.tasks=[],H.teams=[],H.resources=[],H.users=[],H.systems=["BI","BB.com","TBB","Kibo","ByDesign","SOA","OAG","LifeRay","Analytics"],H.priorities=["Low","Medium","High"],b.func={selectDataType:g,refreshData:f,clearEditing:e,editProject:j,deleteProject:k,createProject:h,updateProject:i,toggleSelectionOfSystemForProject:l,toggleSelectionOfExternalTaskForProject:m,editTask:p,deleteTask:q,createTask:n,updateTask:o,editTeam:t,deleteTeam:u,createTeam:r,updateTeam:s,editResource:x,deleteResource:y,createResource:v,updateResource:w,updateTeamAfterModifyingResource:z,toggleSelectionOfTeamForResource:A,toggleSelectionOfTaskForResource:B,editUser:E,deleteUser:F,createUser:C,updateUser:D,toggleSelectionOfProjectForUser:G};var I=b.func;d()}a.module("mean-yeti").controller("admin.controller",["$scope","Api",b])}(angular),function(a){function b(a,b,c){function d(){q.refreshData()}function e(){b.getAll("projects").then(function(a){p.projects=a.data,b.getAll("tasks").then(function(a){p.tasks=a.data,p.tasks=p.tasks.sort(function(a,b){return new Date(b.endDate)-new Date(a.endDate)}),b.getAll("teams").then(function(a){p.teams=a.data,b.getAll("resources").then(function(a){p.resources=a.data,b.getAll("users").then(function(a){p.users=a.data,p.projects.forEach(function(a){p.apiCalls++,b.getProjectDetails(a._id).then(function(b){a.details=b.data,p.apiCalls--})}),void 0===p.currentUser&&(p.currentUser=p.users[0],c(f,1e3))})})})})})}function f(){return p.apiCalls>0?(console.log("not done getting data...try again in a moment."),void c(f,300)):(o(),l(),void m())}function g(a){p.currentUser=a,m()}function h(a){p.selectedProject=a,p.selectedProject.startDate=new Date(p.selectedProject.startDate),p.selectedProject.endDate=new Date(p.selectedProject.endDate),c(function(){n(a),$("html, body").animate({scrollTop:$("#projectDetails").offset().top},500)},10)}function i(a){p.currentUser.projects.push(a),b.update(b.endpoint.user,p.currentUser._id,p.currentUser).then(function(a){b.getAll("resources").then(function(b){p.resources=b.data,p.currentUser=a.data,c(function(){l(),m()},100)})})}function j(a){var d=p.currentUser.projects.indexOf(a);p.currentUser.projects.splice(d,1),b.update(b.endpoint.user,p.currentUser._id,p.currentUser).then(function(a){b.getAll("resources").then(function(b){p.resources=b.data,p.currentUser=a.data,c(function(){l(),m()},100)})})}function k(a){var b=new Date;return a<b}function l(){var a=[],b=new google.visualization.DataTable;b.addColumn("string","Task ID"),b.addColumn("string","Task Name"),b.addColumn("string","Resource"),b.addColumn("date","Start Date"),b.addColumn("date","End Date"),b.addColumn("number","Duration"),b.addColumn("number","Percent Complete"),b.addColumn("string","Dependencies");var c=p.projects.sort(function(a,b){return new Date(b.startDate)-new Date(a.startDate)});c.forEach(function(b){var c=b.details.percentComplete,d="(none)";p.teams.forEach(function(a){a._id===b.team&&(d=a.name)}),a.length<10&&a.push([b._id,b.name,d,new Date(b.startDate),new Date(b.endDate),null,c,null])}),b.addRows(a);var d={height:350,gantt:{trackHeight:30}},e=new google.visualization.Gantt(document.getElementById("chart_div"));e.draw(b,d)}function m(){p.projects.forEach(function(a){var b={labels:["Dependencies","Timeline","Tasks","Complexity"],datasets:[{label:"",backgroundColor:"rgba(26,179,128,0.2)",borderColor:"rgba(23,152,126,1)",data:[a.details.dependencies,a.details.timeline,a.details.tasks,a.details.complexity]}]},c={responsive:!0,legend:{display:!1}},d=document.getElementById("statusChart"+a._id).getContext("2d");new Chart(d,{type:"radar",data:b,options:c})})}function n(a){var b={labels:["Dependencies","Timeline","Tasks","Complexity"],datasets:[{label:"",backgroundColor:"rgba(26,179,128,0.2)",borderColor:"rgba(23,152,126,1)",data:[a.details.dependencies,a.details.timeline,a.details.tasks,a.details.complexity]}]},c={responsive:!0,legend:{display:!1}},d=document.getElementById("ActivityChartProjectDetails").getContext("2d");new Chart(d,{type:"radar",data:b,options:c})}function o(){var a=4,b=3,c=2,d=1;p.projects.forEach(function(b){var c=(new Date(b.endDate)-new Date)/36e5;c>=0&&c<96&&p.notifications.push({level:a,text:"Project "+b.name+" will end in "+Math.round(c)+" hours."})}),p.projects.forEach(function(a){new Date(a.endDate)-new Date<0&&a.details.percentComplete<100&&p.notifications.push({level:b,text:"Project "+a.name+" is past due."})}),p.projects.forEach(function(a){var b=0;p.tasks.forEach(function(c){c.project===a._id&&new Date(c.endDate)-new Date<0&&b++}),b>0&&p.notifications.push({level:c,text:"Project "+a.name+" has "+b+" task"+(b>1?"s":"")+" that "+(b>1?"are":"is")+" past due."})}),p.resources.forEach(function(a){var b="";p.teams.forEach(function(c){c.resources.indexOf(a._id)!==-1&&(b=c.name)});var c=!1;p.tasks.forEach(function(b){if(a.tasks.indexOf(b._id)!==-1&&b.isComplete!==!0){var d=new Date(b.startDate),e=new Date(b.endDate);p.tasks.forEach(function(f){a.tasks.indexOf(f._id)!==-1&&f.isComplete!==!0&&f._id!==b._id&&(d>new Date(f.startDate)&&d<new Date(f.endDate)&&(c=!0),e>new Date(f.startDate)&&e<new Date(f.endDate)&&(c=!0))})}}),c===!0&&p.notifications.push({level:d,text:b+" resource "+a.name+" is over capacity."})}),p.notifications=p.notifications.slice(0,10)}a.vm={};var p=a.vm;p.projects=[],p.tasks=[],p.teams=[],p.resources=[],p.users=[],p.apiCalls=0,p.notifications=[],p.currentUser=void 0,p.selectedProject=void 0,a.func={refreshData:e,showSwitchUser:g,selectProject:h,removeProjectFavorite:j,makeProjectFavorite:i,inPast:k};var q=a.func;d()}a.module("mean-yeti").controller("index.controller",["$scope","Api","$timeout",b])}(angular),angular.module("todoController",[]).controller("mainController",function(a,b,c){a.formData={},c.get().success(function(b){a.todos=b}),a.createTodo=function(){void 0!=a.formData.text&&c.create(a.formData).success(function(b){a.formData={},a.todos=b})},a.deleteTodo=function(b){c.delete(b).success(function(b){a.todos=b})}}),angular.module("mean-yeti").filter("findFavorites",function(){return function(a,b){return void 0===b?[]:a.filter(function(a){return b.indexOf(a._id)!==-1})}}),angular.module("mean-yeti").filter("findTeamMembers",function(){return function(a,b,c){if(void 0===c)return[];if(void 0===b)return[];var d=void 0;return b.forEach(function(a){a._id===c&&(d=a)}),a.filter(function(a){return d.resources.indexOf(a._id)!==-1})}}),angular.module("mean-yeti").filter("firstWord",function(){return function(a){return void 0===a?"":a.split(" ")[0]}}),angular.module("mean-yeti").filter("getExternalTasks",function(){return function(a,b){return void 0===a?[]:void 0===b?[]:a.filter(function(a){return b.externalTasks.indexOf(a._id)!==-1})}}),angular.module("mean-yeti").filter("worksOnTask",function(){return function(a,b){return void 0===a?[]:void 0===b?[]:a.filter(function(a){return void 0!==a.tasks&&a.tasks.indexOf(b)!==-1})}}),angular.module("mean-yeti").factory("Api",["$http",ApiService]),angular.module("todoService",[]).factory("Todos",function(a){return{get:function(){return a.get("/api/todos")},create:function(b){return a.post("/api/todos",b)},delete:function(b){return a.delete("/api/todos/"+b)}}});
//# sourceMappingURL=mean-yeti.js.map